# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  services.fstrim.enable = true;

  services.xserver.videoDrivers = lib.mkDefault [ "modesetting" ];

  hardware.graphics = {
    enable = lib.mkDefault true;
    enable32Bit = lib.mkDefault true;
  };

  # my stupid usb hub crashes systemct suspend half of the time now
  # https://wiki.archlinux.org/title/Power_management/Suspend_and_hibernate#Sleep_hooks
  systemd.services.root-suspend = {
    enable = true;
    description = "Root systemd suspend prehook";
    unitConfig = {
      Description = "Root systemd suspend prehook";
      Before = "sleep.target";
    };
    serviceConfig = {
      Type = "simple";
      ExecStart = "${pkgs.uhubctl}/bin/uhubctl -a off";
    };
    wantedBy = [ "sleep.target" ];
  };
  systemd.services.root-resume = {
    enable = true;
    description = "Root systemd suspend posthook";
    unitConfig = {
      Description = "Root systemd suspend posthook";
      After = "suspend.target";
    };
    serviceConfig = {
      Type = "simple";
      ExecStart = "${pkgs.uhubctl}/bin/uhubctl -a on";
    };
    wantedBy = [ "suspend.target" ];
  };

  boot.initrd.availableKernelModules = [ "xhci_pci" "nvme" "rtsx_pci_sdmmc" "hid_generic" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/3618968f-1717-4c8e-b0d8-2556d18d2c4b";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."luks-06fa6e93-9bde-4703-830e-7ee1a7292a19".device = "/dev/disk/by-uuid/06fa6e93-9bde-4703-830e-7ee1a7292a19";

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/E1BC-04BB";
      fsType = "vfat";
      options = [ "fmask=0077" "dmask=0077" ];
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/d52b7852-f35f-4325-9adc-24aa5d3da2a3";
      }
    ];

  services.pipewire.enable = lib.mkForce false;
  hardware.pulseaudio.enable = true;
  hardware.pulseaudio.daemon.config = {
    default-sample-format = "float32ne";
    default-sample-rate = 48000;
    alternate-sample-rate = 44100;
    default-sample-channels = 2;
    default-channel-map = "front-left,front-right";
    default-fragments = 2;
    default-fragment-size-msec = 125;
    resample-method = "speex-float-5";
    enable-lfe-remixing = "no";
    high-priority = "yes";
    nice-level = -11;
    realtime-scheduling = "yes";
    realtime-priority = 9;
    rlimit-rtprio = 9;
    rlimit-rttime = -1;
    daemonize = "no";
  };

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp0s31f6.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp4s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
