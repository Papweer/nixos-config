# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, inputs, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  services.fstrim.enable = true;

  services.xserver.videoDrivers = lib.mkDefault [ "modesetting" ];

  hardware.graphics = {
    enable = lib.mkDefault true;
    enable32Bit = lib.mkDefault true;
  };

  boot.initrd.availableKernelModules = [ "xhci_pci" "thunderbolt" "vmd" "ahci" "nvme" "usbhid" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = with config.boot.kernelPackages; [ zenpower ];

  # my stupid usb hub crashes systemct suspend half of the time now
  # https://wiki.archlinux.org/title/Power_management/Suspend_and_hibernate#Sleep_hooks
  systemd.services.root-suspend = {
    enable = true;
    description = "Root systemd suspend prehook";
    unitConfig = {
      Description = "Root systemd suspend prehook";
      Before = "sleep.target";
    };
    serviceConfig = {
      Type = "simple";
      ExecStart = "${pkgs.uhubctl}/bin/uhubctl -a off";
    };
    wantedBy = [ "sleep.target" ];
  };
  systemd.services.root-resume = {
    enable = true;
    description = "Root systemd suspend posthook";
    unitConfig = {
      Description = "Root systemd suspend posthook";
      After = "suspend.target";
    };
    serviceConfig = {
      Type = "simple";
      ExecStart = "${pkgs.uhubctl}/bin/uhubctl -a on";
    };
    wantedBy = [ "suspend.target" ];
  };

  services.btrfs.autoScrub = {
    enable = true;
    interval = "weekly";
  };

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/ca98a0cc-4a50-4e28-84e5-0dddcbfea155";
      fsType = "btrfs";
      options = [ "noatime,compress-force=zstd:2,discard=async,commit=120,clear_cache,space_cache=v2,subvol=@" ];
    };

  boot.loader.efi.efiSysMountPoint = "/boot";

  boot.initrd.luks.devices."luks-9c74f9e5-41c3-4ba6-8a87-059dbcd4e2b3".device = "/dev/disk/by-uuid/9c74f9e5-41c3-4ba6-8a87-059dbcd4e2b3";

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/4898-D64F";
      fsType = "vfat";
      options = [ "fmask=0077" "dmask=0077" ];
    };
  
  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp0s20f3.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
